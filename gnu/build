#!/bin/sh
# ELLCC GNU tools build script.

# Get the staging directory.
prefix=`cd ..; pwd`

# Figure out the compilers to use.
. ../build-setup $*

echo Configured to $WHY.
echo C compiler: $cc $CFLAGS
echo C++ compiler: $cxx $CXXFLAGS
echo In: gnu-build$builddir

# Configure for GNU tools.
mkdir -p gnu-build$builddir

if false ; then
echo foo
exit 1
# Configure for binutils.
# binutils are build to support all targets in the target list.
#cd gnu-build$builddir
echo Configuring package binutils for $targets
make DIR=gnu-build$builddir CC=$cc CXX=$cxx AR=$ar TARGET=$host OS=$os \
    targetlist=$targetlist \
    bindir=$bindir prefix=$prefix build=$build-linux \
    binutils.configure || exit 1

make -C gnu-build$builddir/binutils || exit 1
fi

# Configure for assemblers for all targets.
for t in $targets; do
  echo Configuring the assembler for $t
  make DIR=gnu-build$builddir CC=$cc CXX=$cxx AR=$ar TARGET=$host OS=$os \
      target=$t \
      bindir=$bindir prefix=$prefix build=$build-linux \
      gas.configure || exit 1

  make -C gnu-build$builddir/binutils/$t || exit 1
done

# Configure for GDB.
# GDB is built to support all GDB targets.
cd gnu-build$builddir
echo Configuring package gdb for $targets
mkdir gdb
cd gdb
../../src/gdb/configure CC="$hcc" CXX="$hcxx" --enable-64-bit-bfd \
  --enable-targets=$targetlist \
  --program-prefix=ecc- --prefix=$prefix/lib --bindir=$bindir \
  --datadir=$prefix/lib/share
if [ $? -ne 0 ] ; then
  echo configure for gdb failed
  exit 1
fi

  sed -e "s:/.*/gnu/src/missing ::g" Makefile > tmp$$
  mv tmp$$ Makefile
  make || exit 1
  cd ../..

if [ "$host" != "$build" ] ; then
  # The host system is not the build system.
  # Build only  binutils, the assemblers, and gdb.
  # Finally, install into the target specific bin dir.
  mkdir -p $bindir
  make TARGETDIR=$builddir BINDIR=$bindir installcross || exit 1
  exit 0
fi

# Configure for QEMU.
cd src/qemu
# The QEMU system targets.
qemu_target_list="i386-softmmu x86_64-softmmu arm-softmmu \
    microblaze-softmmu mips-softmmu mipsel-softmmu \
    ppc-softmmu ppc64-softmmu sparc-softmmu"

if [ `uname` = "Linux" ] ; then 
    # The QEMU Linux user space targets.
    qemu_target_list="$qemu_target_list i386-linux-user \
    x86_64-linux-user arm-linux-user armeb-linux-user \
    microblaze-linux-user mips-linux-user mipsel-linux-user \
    ppc-linux-user ppc64-linux-user ppc64abi32-linux-user sparc-linux-user"
fi

echo Configuring package qemu for $targets
./configure --cc="$hcc" --host-cc="$hcc" --prefix=$prefix --disable-strip \
  --target-list="$qemu_target_list" --disable-guest-agent
if [ $? -ne 0 ] ; then
  echo configure for qemu failed
  exit 1
fi
make
cd ../..

# Finally, install everything.
make TARGETDIR=$builddir install || exit 1
