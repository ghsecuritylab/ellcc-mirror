# This file determins the target list and compilers to use.
# Get the supported targets for the GNU tools.
targets=`cat $prefix/targets`
targetlist=`echo $targets | sed -e "s/ /,/g"`

bin=$prefix/bin
bindir=$bin
# Get the build processor. For now it is also the host and target processor.
build=`uname -m`
case "${build}" in
  i[3-9]86)
    build=i386
    ;;
esac
host=$build
target=$build
os=linux
arg1=
hostos=`uname -s`
tuple=

if [ $# -ge 1 ] ; then
  # The first argument is the desired cross host tuple.
  host=`$prefix/libecc/getarch $1`
  arg1=$1
  bindir=$bindir-$1
  hostos=Linux
  tuple=$1
  libtuple=$tuple
  shift
fi

if [ $# -ge 1 ] ; then
  # The second argument is the desired library tuple.
  libtuple=$1
  shift
fi

if [ "x$hostos" = "xLinux" ] ; then
  # ELLCC can currently build itself only for Linux.
  if [ `which ecc` ] ; then
    # ecc exists, and is in the PATH.
    ecc=ecc
  fi

  if [ -e $bin/ecc ]; then
    ecc=$bin/ecc
  fi
fi

if [ "x$ecc" != "x" ] ; then
  # An ecc exists, use it to compile.
  if [ "$tuple" == "" ] ; then
    # Find a tuple for this host.
    tuple=`cd $prefix/libecc/config; echo $host*`
  fi
  if [ -e $prefix/libecc/lib/$libtuple/libc.a ]; then
    # To build for host with libecc:
    cc=$ecc
    cxx=$ecc++
    hcc=$ecc
    hcxx=$ecc++
    if [ -e $ecc-ar ]; then
      ar=$ecc-ar
      ranlib=$ecc-ranlib
    else
      ar=ar
      ranlib=ranlib
    fi
    builddir="-$tuple"
    haslibs=yes
    WHY="build for $host with libecc using ecc"
  else
    # libecc has not been built, use the host's libraries.
    cc=$ecc
    cxx=$ecc++
    hcc=$ecc
    hcxx=$ecc++
    ar=ar
    ranlib=ranlib
    builddir=""
    haslibs=no
    WHY="build for $host with host libraries using ecc"
  fi
else
  # Build with the gcc compiler
  cc=gcc
  cxx=g++
  hcc=gcc
  hcxx=g++
  ar=ar
  builddir=""
  haslibs=no
  WHY="build for $host with host libraries using gcc"
fi

